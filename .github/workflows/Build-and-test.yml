name: Build & Test

on: [push, pull_request]

jobs:
  job:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows latest (MSVC)",
            os: windows-latest,
            cc: 'cl', cxx: 'cl',
            coverage: 'OFF',
            cmake_flags: ''
          }
        - {
            name: "Windows latest (MinGW)",
            os: windows-latest,
            cc: 'gcc', cxx: 'g++',
            coverage: 'OFF',
            cmake_flags: ''
          }
        - {
            name: "Ubuntu latest (gcc)",
            os: ubuntu-latest,
            pkg_manager: sudo apt-get,
            cc: 'gcc', cxx: 'g++',
            coverage: 'ON',
            cmake_flags: '-- -k -j4'
          }
        - {
            name: "Ubuntu latest (clang)",
            os: ubuntu-latest,
            cc: 'clang', cxx: 'clang++',
            coverage: 'OFF',
            cmake_flags: '-- -k -j4'
          }
        - {
            name: "macOS latest (clang)",
            os: macos-latest,
            pkg_manager: brew,
            cc: 'clang', cxx: 'clang++',
            coverage: 'ON',
            cmake_flags: '-- -k -j4'
          }

    steps:
      - uses: lukka/get-cmake@latest
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install lcov
        if: "contains( matrix.config.coverage, 'ON')"
        run: ${{ matrix.config.pkg_manager }} install lcov
        shell: bash

      - name: Configure & Build
        uses: lukka/run-cmake@v3
        with:
          cmakeBuildType: 'Debug'
          cmakeGenerator: 'UnixMakefiles'
          cmakeListsOrSettingsJson: 'CMakeListsTxtAdvanced'
          cmakeAppendedArgs: >-
            -DCMAKE_C_COMPILER=${{ matrix.config.cc }}
            -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
            -DCODE_COVERAGE=${{ matrix.config.coverage }}
            -DUNITS_BUILD_TESTS=ON
          buildWithCMakeArgs: '--config Debug ${{ matrix.config.cmake_flags }}'
          buildDirectory: '${{ runner.workspace }}/build/'

      - name: Run tests
        working-directory: ${{ runner.workspace }}/build
        run: ctest -V -C Debug
        shell: bash

      - name: Create coverage report
        if: "contains( matrix.config.coverage, 'ON')"
        working-directory: ${{ runner.workspace }}/build
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/deps/*' --output-file coverage.info
        shell: bash

      - name: Upload coverage to Codecov
        if: "contains( matrix.config.coverage, 'ON')"
        uses: codecov/codecov-action@v1
        with:
          file: ${{ runner.workspace }}/build/coverage.info
          flags: unittests
          name: ${{ matrix.config.name }}
          fail_ci_if_error: true
          verbose: false
